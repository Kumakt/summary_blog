[{"authors":["admin"],"categories":null,"content":"自分が勉強したことを記録する備忘録\n","date":1549324800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1567641600,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/author/kumakt/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/kumakt/","section":"authors","summary":"自分が勉強したことを記録する備忘録","tags":null,"title":"Kumakt","type":"authors"},{"authors":["吳恩達"],"categories":null,"content":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks.\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed neque elit, tristique placerat feugiat ac, facilisis vitae arcu. Proin eget egestas augue. Praesent ut sem nec arcu pellentesque aliquet. Duis dapibus diam vel metus tempus vulputate.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"704f87b982c35398f63c73390b73c8f5","permalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/%E5%90%B3%E6%81%A9%E9%81%94/","section":"authors","summary":"吳恩達 is a professor of artificial intelligence at the Stanford AI Lab. His research interests include distributed robotics, mobile computing and programmable matter. He leads the Robotic Neurobiology group, which develops self-reconfiguring robots, systems of self-organizing robots, and mobile sensor networks. Lorem ipsum dolor sit amet, consectetur adipiscing","tags":null,"title":"吳恩達","type":"authors"},{"authors":["Kumakt"],"categories":["R"],"content":"\r一般事項\rある変数と別の変数の関係を数式で表したものを回帰モデルと呼ぶ。\n両者の関係が線形で与えられると仮定したものが線形回帰モデルである。\n式で表すと、\n\\[y = \\beta_0 + \\beta_1x\\]\nである。\n実際のデータでこのモデルを考える際には、観測値と仮定したモデルとの間には誤差が生じるため\n\\(y_i = \\beta_0 + \\beta_1x_i + \\epsilon_i\\)となる。\n\\(i = 1,2,3...n\\)である。\nこのモデルがデータに良くあてはまるためには誤差\\(\\epsilon_i\\)の総和が小さくなるようなパラメータを求めればよい。\nただし、線形回帰モデルと観測値の差は負の値になることもあるため、そのまま総和をとるわけでなく、2乗して\n総和をとる。これが最小二乗法である。\n\r架空データの作成\rここでは収縮期血圧と年齢の関係をみる単純なモデルを考える。\n# 乱数発生で毎回同じ値になるようにseedを設定する\rset.seed(123)\r# ある程度線形モデルにフィットするようにするため相関を指定\rrho \u0026lt;- 0.65\r# 正規分布に従う乱数の設定(サンプルサイズ、平均、標準偏差は自由に設定可能)\ry \u0026lt;- rnorm(n = 50, mean = 140, sd = 10)\rx \u0026lt;- rnorm(n = 50, mean = 65, sd = 10)\rz \u0026lt;- rnorm(n = 50, mean = 0, sd = 10)\r# 相関をもった現実味のある値にするため、それぞれbpとageに格納\r# sqrtは平方根という意味\rbp \u0026lt;- sqrt(rho)*z + sqrt(1 - rho)*y + 30\rage \u0026lt;- sqrt(rho)*z + sqrt(1 - rho)*x + 30\r# データフレームという形式でbpとageをdataというオブジェクトに格納\rdata \u0026lt;- data.frame(age,bp)\r# 列に名前を付ける\rname \u0026lt;- c(\u0026quot;age\u0026quot;,\u0026quot;SBP\u0026quot;)\rcolnames(data) \u0026lt;- name\r# これで収縮期血圧と年齢の関係を示すデータが完成\r\rデータの確認を行う\r次は実際にどんなデータであるか確認を行う。\n# 外れ値や欠損値など\r# summaryはデータの平均などを示す関数、headは先頭から指定の行を表示\rsummary(data)\r## age SBP ## Min. :47.15 Min. : 91.89 ## 1st Qu.:62.03 1st Qu.:103.05 ## Median :66.83 Median :111.74 ## Mean :67.27 Mean :110.98 ## 3rd Qu.:72.59 3rd Qu.:118.22 ## Max. :83.99 Max. :134.37\rhead(data, n = 3)\r## age SBP\r## 1 64.22569 103.7818\r## 2 70.35670 113.5344\r## 3 66.21200 120.0577\r# strは各変数の形式を示す、実際の解析ではどの形式なのか数値型なのか因子型なのかといった形の確認が重要\rstr(data)\r## \u0026#39;data.frame\u0026#39;: 50 obs. of 2 variables:\r## $ age: num 64.2 70.4 66.2 73.7 59.4 ...\r## $ SBP: num 104 114 120 110 106 ...\r\r図示\rデータの分布を散布図を描いて確認を行う。\nplot関数でも描くことができるが今回はggplot2を用いる。\nlibrary(ggplot2)\rggplot(data = data,\raes(x = age, y = SBP)) +\rgeom_point() +\rtheme_bw()\r散布図をみる限り、年齢と収縮期血圧には線形の関係がありそうに見える。\n\rモデルを作成する\rここでは２変量の単純なモデルを作成する。\nlm関数は線形回帰モデルを作成する。\nmodel \u0026lt;- lm(data = data, bp ~ age)\rsummary(model)\r## ## Call:\r## lm(formula = bp ~ age, data = data)\r## ## Residuals:\r## Min 1Q Median 3Q Max ## -14.833 -4.858 0.504 6.091 13.138 ## ## Coefficients:\r## Estimate Std. Error t value Pr(\u0026gt;|t|) ## (Intercept) 62.2829 8.1559 7.637 7.83e-10 ***\r## age 0.7239 0.1202 6.022 2.32e-07 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## Residual standard error: 7.478 on 48 degrees of freedom\r## Multiple R-squared: 0.4304, Adjusted R-squared: 0.4185 ## F-statistic: 36.26 on 1 and 48 DF, p-value: 2.322e-07\rResidualsは残差のことで誤差の予測値とみなすことができる。\nCoefficientsは係数の結果である。切片と係数に該当する。\n今回のモデルは、\n\\(y_i = 62.283 + 0.724x_i\\)と表すことができる。\n\rモデルの評価\rlibrary(ggfortify)\rautoplot(model, smooth.colour = NA)\r## Warning: `arrange_()` is deprecated as of dplyr 0.7.0.\r## Please use `arrange()` instead.\r## See vignette(\u0026#39;programming\u0026#39;) for more help\r## This warning is displayed once every 8 hours.\r## Call `lifecycle::last_warnings()` to see where this warning was generated.\r## Warning: Removed 50 row(s) containing missing values (geom_path).\r## Warning: Removed 50 row(s) containing missing values (geom_path).\r## Warning: Removed 50 row(s) containing missing values (geom_path).\r右上のQQplotはおおむね問題なさそうであり、残差は正規分布していそうである。\nまた左下の図をみても分散に明らかな偏りはなさそうであり、等分散性が保たれていると思われる。\r(ばらつきは比較的ありそうである)\nまた先のsummaryの結果をみるとR-squaredという項目があるが、これが決定係数である。\n予測値を\\(\\hat{y_i}\\)、平均値を\\(\\bar{y}\\)と表すと、\n\\[R^2 =1 - \\frac{\\sum_{i=1}^n(y_i - \\hat{y_i})^2}{\\sum_{i=1}^n(y_i - \\bar{y})^2}\\]\nとなる。決定係数は1に近いほど当てはまりがよいのであるから、この分数の部分が0に近ければよい。\n分子が小さくなる、つまり予測値と観測値が近いほど0に近づく、決定係数が1に近づくということになる。\n\r最後に散布図に線形回帰直線をひいてみる\rggplot(data = data,\raes(x = age, y = SBP)) +\rgeom_point() +\rstat_smooth(method = \u0026quot;lm\u0026quot;, se = TRUE, size = 1) +\rtheme_bw()\r## `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39;\r\r結果\r今回の年齢と収縮期血圧の関係では、年齢が高くなるほど線形に収縮期血圧が高くなると予想し、モデルを作成した。\nモデルの前提は満たされているようであり、係数も有意な結果であった。\nしかし決定係数は修正\\(R^2\\)および\\(R^2\\)ともに良いとは言えず、収縮期血圧について年齢だけのモデルでは、\r十分に説明できていないことになる。\n実際の臨床でも血圧を予測するうえで他に、家族歴など様々な要因が重要であることは当然であり、年齢だけで\r十分に説明できないということは妥当であるといえる。\n\r","date":1594735057,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594735057,"objectID":"7437ae4ba188ef9b40a9b05be7d80bd0","permalink":"/post/linear/","publishdate":"2020-07-14T22:57:37+09:00","relpermalink":"/post/linear/","section":"post","summary":"Rによる線形回帰モデルの実装","tags":["regression"],"title":"線形回帰モデルの基礎","type":"post"},{"authors":["Kumakt"],"categories":["R"],"content":"\rパッケージの読み込み\r今回はパッケージに付属のデータを用いる。\n# 必要なパッケージの読み込み\rlibrary(ggplot2)\rlibrary(dplyr)\rlibrary(ggfortify)\rlibrary(DAAG)\r\rデータの確認\r# データの確認\rdata(\u0026quot;head.injury\u0026quot;)\rsummary(head.injury)\r## age.65 amnesia.before basal.skull.fracture GCS.decrease ## Min. :0.000 Min. :0.0000 Min. :0.00000 Min. :0.00000 ## 1st Qu.:0.000 1st Qu.:0.0000 1st Qu.:0.00000 1st Qu.:0.00000 ## Median :0.000 Median :0.0000 Median :0.00000 Median :0.00000 ## Mean :0.116 Mean :0.2047 Mean :0.06985 Mean :0.02275 ## 3rd Qu.:0.000 3rd Qu.:0.0000 3rd Qu.:0.00000 3rd Qu.:0.00000 ## Max. :1.000 Max. :1.0000 Max. :1.00000 Max. :1.00000 ## GCS.13 GCS.15.2hours high.risk loss.of.consciousness\r## Min. :0.00000 Min. :0.0000 Min. :0.0000 Min. :0.0000 ## 1st Qu.:0.00000 1st Qu.:0.0000 1st Qu.:0.0000 1st Qu.:0.0000 ## Median :0.00000 Median :0.0000 Median :0.0000 Median :0.0000 ## Mean :0.03749 Mean :0.1266 Mean :0.2429 Mean :0.1118 ## 3rd Qu.:0.00000 3rd Qu.:0.0000 3rd Qu.:0.0000 3rd Qu.:0.0000 ## Max. :1.00000 Max. :1.0000 Max. :1.0000 Max. :1.0000 ## open.skull.fracture vomiting clinically.important.brain.injury\r## Min. :0.00000 Min. :0.00000 Min. :0.0000 ## 1st Qu.:0.00000 1st Qu.:0.00000 1st Qu.:0.0000 ## Median :0.00000 Median :0.00000 Median :0.0000 ## Mean :0.03685 Mean :0.09869 Mean :0.0801 ## 3rd Qu.:0.00000 3rd Qu.:0.00000 3rd Qu.:0.0000 ## Max. :1.00000 Max. :1.00000 Max. :1.0000\rstr(head.injury)\r## \u0026#39;data.frame\u0026#39;: 3121 obs. of 11 variables:\r## $ age.65 : num 0 0 0 0 0 0 0 0 1 0 ...\r## $ amnesia.before : num 1 0 0 0 0 1 0 0 0 1 ...\r## $ basal.skull.fracture : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ GCS.decrease : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ GCS.13 : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ GCS.15.2hours : num 0 0 0 1 1 0 0 0 0 0 ...\r## $ high.risk : num 0 0 0 0 0 0 0 0 1 0 ...\r## $ loss.of.consciousness : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ open.skull.fracture : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ vomiting : num 0 0 0 0 0 0 0 0 0 0 ...\r## $ clinically.important.brain.injury: num 0 0 0 0 0 0 0 0 0 0 ...\r## 分布や欠損、各変数の型を確認しておく\r\rDAAGパッケージに付属のデータセット\r\r軽度の頭部外傷のデータセット\n\r3121名、11列をもつ。\r\r以下、変数名\n\rage.65：0 = under 65, 1 = over 65\n\ramnesia.before : 受傷前についての健忘(記憶があるか)\ramnesia before impact (less than 30 minutes = 0, more than 30 minutes =1).\n\rbasal.skull.fracture : 頭蓋亭骨折(0 = no fracture, 1 = fracture).\n\rGCS.decrease : 意識レベル低下\rGlasgow Coma Scale decrease (0 = no deterioration, 1 = deterioration).\n\rGCS.13 : 最初の意識レベル initial Glasgow Coma Scale (0 = not ‘13’, 1 = ‘13’).\n\rGCS.15.2hours : けがをして2時間後の意識レベル\rGlasgow Coma Scale after 2 hours (0 = not ‘15’, 1 = ‘15’).\n\rhigh.risk : 神経学的な介入が必要かどうか医師による判断\rassessed by clinician as high risk for neurological intervention (0 = not high risk, 1 = high risk).\n\rloss.of.consciousness : 意識消失の有無(0 = conscious, 1 = loss of consciousness).\n\ropen.skull.fracture : 開放性頭蓋骨骨折(0 = no fracture, 1 = fracture)\n\rvomiting : 嘔吐の有無(0 = no vomiting, 1 = vomiting)\n\rclinically.important.brain.injury : CTで臨床的に重要な急性期の脳所見があるかどうか\rany acute brain finding revealed on CT (0 = not present, 1 = present).\n\r\r\nStiell, I.G., Wells, G.A., Vandemheen, K., Clement, C., Lesiuk, H., Laupacis, A., McKnight, R.D., Verbee, R., Brison, R., Cass, D., Eisenhauer, M., Greenberg, G.H., and Worthington, J. (2001) The Canadian CT Head Rule for Patients with Minor Head Injury, The Lancet. 357: 1391-1396.\n＜今回のモデル＞\n目的変数：CT所見に何か異常があるか\n興味のある説明変数：健忘の有無\nとして多変量ロジスティック回帰モデルを作成する。\n\rモデルの作成\r# モデルの作成\r# glm関数は一般化線形モデルに用いる関数で、familyで自分が使いたい分布を指定する。\r#今回は二値変数がアウトカムなので二項分布に従い、リンク関数はlogitなので以下のようになる\rmodel \u0026lt;- glm(clinically.important.brain.injury ~ amnesia.before + age.65 + GCS.decrease + GCS.15.2hours + GCS.13 + high.risk + loss.of.consciousness + vomiting,family = binomial(link = \u0026quot;logit\u0026quot;),data = head.injury)\r\r結果の確認\r# モデルの結果確認\rsummary(model)\r## ## Call:\r## glm(formula = clinically.important.brain.injury ~ amnesia.before + ## age.65 + GCS.decrease + GCS.15.2hours + GCS.13 + high.risk + ## loss.of.consciousness + vomiting, family = binomial(link = \u0026quot;logit\u0026quot;), ## data = head.injury)\r## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -2.6149 -0.3355 -0.2339 -0.1734 2.9001 ## ## Coefficients:\r## Estimate Std. Error z value Pr(\u0026gt;|z|) ## (Intercept) -4.1904 0.1485 -28.211 \u0026lt; 2e-16 ***\r## amnesia.before 0.6055 0.1656 3.656 0.000256 ***\r## age.65 1.3412 0.1761 7.617 2.60e-14 ***\r## GCS.decrease 0.3901 0.3573 1.092 0.274954 ## GCS.15.2hours 1.9435 0.1598 12.164 \u0026lt; 2e-16 ***\r## GCS.13 1.2985 0.2663 4.876 1.09e-06 ***\r## high.risk 1.1237 0.1527 7.360 1.84e-13 ***\r## loss.of.consciousness 0.8733 0.1926 4.534 5.78e-06 ***\r## vomiting 1.2541 0.1865 6.724 1.77e-11 ***\r## ---\r## Signif. codes: 0 \u0026#39;***\u0026#39; 0.001 \u0026#39;**\u0026#39; 0.01 \u0026#39;*\u0026#39; 0.05 \u0026#39;.\u0026#39; 0.1 \u0026#39; \u0026#39; 1\r## ## (Dispersion parameter for binomial family taken to be 1)\r## ## Null deviance: 1741.6 on 3120 degrees of freedom\r## Residual deviance: 1287.0 on 3112 degrees of freedom\r## AIC: 1305\r## ## Number of Fisher Scoring iterations: 6\r各変数の係数を確認する。\n値をオッズ比へ変換する。\n# オッズ比と95%信頼区間の確認\rresult_odds \u0026lt;- as.data.frame(cbind(exp(summary(model)$coefficient[,1]),exp(confint(model))\r,summary(model)$coefficient[,4]))\r## Waiting for profiling to be done...\r# result_oddsというデータフレームの列名を名付ける\rnames(result_odds) \u0026lt;- c(\u0026quot;Odds ratio\u0026quot;,\u0026quot;lower 95%CI\u0026quot;,\u0026quot;upper 95%CI\u0026quot;,\u0026quot;P value\u0026quot;)\r# 小数点２桁で結果を表示\rround(result_odds,2)\r## Odds ratio lower 95%CI upper 95%CI P value\r## (Intercept) 0.02 0.01 0.02 0.00\r## amnesia.before 1.83 1.32 2.53 0.00\r## age.65 3.82 2.70 5.39 0.00\r## GCS.decrease 1.48 0.71 2.91 0.27\r## GCS.15.2hours 6.98 5.10 9.56 0.00\r## GCS.13 3.66 2.15 6.12 0.00\r## high.risk 3.08 2.28 4.15 0.00\r## loss.of.consciousness 2.39 1.63 3.47 0.00\r## vomiting 3.50 2.42 5.03 0.00\r\rモデルの評価\rlibrary(pROC)\r## Type \u0026#39;citation(\u0026quot;pROC\u0026quot;)\u0026#39; for a citation.\r## ## 次のパッケージを付け加えます: \u0026#39;pROC\u0026#39;\r## 以下のオブジェクトは \u0026#39;package:stats\u0026#39; からマスクされています: ## ## cov, smooth, var\rROC \u0026lt;- roc(response=head.injury$clinically.important.brain.injury, predictor=model$fitted.values)\r## Setting levels: control = 0, case = 1\r## Setting direction: controls \u0026lt; cases\rROC\r## ## Call:\r## roc.default(response = head.injury$clinically.important.brain.injury, predictor = model$fitted.values)\r## ## Data: model$fitted.values in 2871 controls (head.injury$clinically.important.brain.injury 0) \u0026lt; 250 cases (head.injury$clinically.important.brain.injury 1).\r## Area under the curve: 0.8387\rplot(ROC)\rROC(C統計量)は0.837くらいで今回のモデルの当てはまりはよさそうである。\n「怪我の前の記憶喪失(健忘)」と「CT所見に何かしら異常が見つかるか」の関係をみることが今回の目的であり、\n最終結果はオッズ比 1.83, 95%CI 1.32 - 2.53となり、受傷時の健忘はCTの異常所見の発見に影響があると言える。\n\r","date":1594734364,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594734364,"objectID":"4e4a31b9d2fb4111d929595b9d16341a","permalink":"/post/logi/","publishdate":"2020-07-14T22:46:04+09:00","relpermalink":"/post/logi/","section":"post","summary":"Logistic回帰の実装について簡単に","tags":["GLM"],"title":"Logistic回帰の実装","type":"post"},{"authors":["Kumakt"],"categories":["R"],"content":"\r一般事項\rRにはグラフを書く上でおもに２つの方法がある。\nデフォルトのgraphicsで扱うplot関数などとggplot2パッケージによる方法である。\nここでは医学系でよく扱うグラフをggplot2を実装する。\n\rデータの準備\rあるA市とB市で収縮期血圧を調査した設定で架空データを作成する。\nset.seed(125) # 乱数の固定のシード\ra \u0026lt;- rnorm(n = 100, mean = 140, sd = 10)\rb \u0026lt;- rnorm(n = 100, mean = 60, sd = 5 )\rc \u0026lt;- rep(c(\u0026quot;A_city\u0026quot;,\u0026quot;B_city\u0026quot;),50)\rd \u0026lt;- rbinom(n = 100, size = 1, prob = 0.6) # ここでは男性の割合を0.6として二項分布によるランダム値の作成\rstudy \u0026lt;- data.frame(a,b,c,d)\rname \u0026lt;- c(\u0026quot;SBP\u0026quot;, \u0026quot;Age\u0026quot;, \u0026quot;City\u0026quot;, \u0026quot;Sex\u0026quot;) colnames(study) \u0026lt;- name\r# 性別は二値なのでデータ型を変換する\rstudy$Sex \u0026lt;- as.factor(study$Sex)\rstudy$Sex \u0026lt;- factor(study$Sex,levels = c(1,0),\rlabels = c(\u0026quot;Male\u0026quot;,\u0026quot;Female\u0026quot;))\r\rデータの確認\rsummary(study)\r## SBP Age City Sex ## Min. :103.9 Min. :46.80 A_city:50 Male :63 ## 1st Qu.:134.6 1st Qu.:56.90 B_city:50 Female:37 ## Median :141.7 Median :59.93 ## Mean :141.0 Mean :60.09 ## 3rd Qu.:147.9 3rd Qu.:63.14 ## Max. :164.0 Max. :72.41\r\r散布図\rggplotでは要素を追記していく形が基本となる。\n散布図で連続変数同士の関係をみる。\n例えば年齢と収縮期血圧の関係を見たい場合\nlibrary(ggplot2)\rggplot(data = study, aes(x = Age, y = SBP, colour = City)) + # ここがベースで、使用するデータ、軸、およびcolourを指定することでカテゴリーごとに色分けできる\rgeom_point(size = 4) + # 散布図にするという指定\rxlab(\u0026quot;Age\u0026quot;) + # x軸ラベルの命名\rylab(\u0026quot;SBP\u0026quot;) + # y軸ラベルの命名\rggtitle(\u0026quot;SBP調査\u0026quot;) + # グラフタイトルの命名\rtheme_bw() \rA市もB市も同じくらいばらついていそうである。\n\r箱ひげ図\r離散型の変数と連続型の変数の関係をみるために使う。\n箱ひげ図により統計量(平均値、標準偏差)も一緒に図示できる。\nggplot(data = study, aes(x = City, y = SBP, colour = City)) +\rgeom_boxplot() + # ここがboxplotに変わっただけ\rgeom_jitter() + # 各点のばらつきを追加する\r# geom_point(size = 3, alpha = 0.5) +\rxlab(\u0026quot;Age\u0026quot;) + ylab(\u0026quot;SBP\u0026quot;) + ggtitle(\u0026quot;SBP調査\u0026quot;) + theme_bw()\r\rバイオリンプロット\rバイオリンプロットによりデータの分布の密度も可視化することができる。\n# バイオリンプロットも描くことができる\rggplot(data = study, aes(x = City, y = SBP, colour = City)) +\rgeom_violin() +\rxlab(\u0026quot;Age\u0026quot;) + ylab(\u0026quot;SBP\u0026quot;) + ggtitle(\u0026quot;SBP調査\u0026quot;) + theme_bw()\r\rヒストグラム\r連続変数などの分布をみる。\nここでは両方の都市での年齢の分布を示している。\n# ヒストグラム\rggplot(data = study, aes(x = Age)) +\rgeom_histogram(binwidth = 2) + # ヒストグラム描きます、階級値は2にしますという宣言\rfacet_wrap(~City) # 群別の図を書くことができる\r\r棒グラフ\r今回のデータでは必要性が乏しいが\nggplot(data = study, aes(x = City, y = SBP, fill = Sex)) +\rgeom_bar(stat = \u0026quot;identity\u0026quot;, position = \u0026quot;dodge\u0026quot;) +\rxlab(\u0026quot;Sex\u0026quot;) +\rylab(\u0026quot;SBP\u0026quot;)\r\r","date":1594692794,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1594692794,"objectID":"10065deaa3098b0da91b78b48d0efc71","permalink":"/post/2015-07-23-r-rmarkdown/","publishdate":"2020-07-13T21:13:14-05:00","relpermalink":"/post/2015-07-23-r-rmarkdown/","section":"post","summary":"一般事項 Rにはグラフを書く上でおもに２つの方法がある。 デフォルトのgraphicsで扱うplot関数","tags":["R Markdown","ggplot","regression"],"title":"Rによるグラフ基礎","type":"post"},{"authors":["Kumakt"],"categories":[],"content":"from IPython.core.display import Image Image('https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png')  print(\u0026quot;Welcome to Academic!\u0026quot;)  Welcome to Academic!  Install Python and JupyterLab  Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb  The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata ( front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post's title date: 2019-09-01 # Put any other Academic metadata here... ---  Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post\u0026rsquo;s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=.  Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"デフォルトのまま(Display Jupyter Notebooks with Academic)","type":"post"}]